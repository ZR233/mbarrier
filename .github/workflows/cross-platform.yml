name: Cross-platform Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  cross-compile:
    name: Cross-compile test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          # x86 family
          - x86_64-unknown-linux-gnu
          - i686-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - i686-pc-windows-gnu
          # ARM family
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - arm-unknown-linux-gnueabihf
          # RISC-V family
          - riscv64gc-unknown-linux-gnu
          - riscv32gc-unknown-linux-gnu
          # Embedded targets (no-std)
          - thumbv7em-none-eabihf
          - aarch64-unknown-none-softfloat
          - riscv32imc-unknown-none-elf
          - riscv64gc-unknown-none-elf

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross
      uses: taiki-e/install-action@cross

    - name: Build library
      run: cross build --target ${{ matrix.target }} --lib

    - name: Build library with SMP feature
      run: cross build --target ${{ matrix.target }} --lib --features smp

    - name: Build examples (if not embedded)
      if: ${{ !contains(matrix.target, 'none') }}
      run: cross build --target ${{ matrix.target }} --examples

  native-test:
    name: Native test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Run tests
      run: cargo test --verbose

    - name: Run tests with SMP feature
      run: cargo test --features smp --verbose

    - name: Run examples
      run: |
        cargo run --example usage
        cargo run --example performance
        cargo run --example asm_analysis

  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Run benchmarks
      run: cargo bench

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview

    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov

    - name: Generate coverage
      run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: lcov.info
        fail_ci_if_error: false
